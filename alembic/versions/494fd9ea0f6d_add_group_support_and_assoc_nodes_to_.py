"""Add group support and assoc nodes to nodeaccess

Revision ID: 494fd9ea0f6d
Revises: a9aa0e1e8fea
Create Date: 2017-07-01 10:07:28.960421

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '494fd9ea0f6d'
down_revision = 'a9aa0e1e8fea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        op.create_table('nodeAccess2Node',
        sa.Column('access_id', sa.Integer(), nullable=True),
        sa.Column('node_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['access_id'], ['nodeAccess.id'], ),
        sa.ForeignKeyConstraint(['node_id'], ['openwrt.uuid'], )
        )
    except OperationalError as e:
        print(e)

    try:
        op.add_column('nodeAccess', sa.Column('access_all_nodes', sa.Boolean(), nullable=True))
        op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    except OperationalError as e:
        print(e)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'is_admin')
    op.drop_column('nodeAccess', 'access_all_nodes')
    op.drop_table('nodeAccess2Node')
    # ### end Alembic commands ###
