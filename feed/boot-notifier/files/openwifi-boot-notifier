#!/bin/sh /etc/rc.common
# Copyright (C) 2014 Alexander Couzens <lynxis@fe80.eu>

START=99
USE_PROCD=1

validate_openwifi_section()
{
  uci_validate_section openwifi openwifi "${1}" \
    'address:string:fe80::5'

  return $?
}

openwifi_config() {
  local cfg="$1"

  local address localaddress uuid hostname protocol

  validate_openwifi_section "${1}" || {
    echo "validation failed"
    return 1
  }

  . /etc/openwrt_release

  localaddress=$(ip r g "${address}" | awk '{ print $7 }')
  protocol="0.1"
  user=root
  password="$(dd if=/dev/urandom of=- bs=512 count=1 2>/dev/null | md5sum - | cut -c1-16)"

  [ -n "$IPKG_INSTROOT" ] || lock /var/lock/passwd
  TMP=$(mktemp /tmp/userdel_XXXXXX)
  user_add generatepw 1023 65534
  echo -e "$password\n$password\n" | passwd generatepw
  cryptpw="$(grep ^generatepw: /etc/shadow | awk -F: '{print $2}')"

  # remove generatepw user
  cp /etc/shadow $TMP
  grep -v "^generatepw:" $TMP > /etc/shadow
  cp /etc/passwd $TMP
  grep -v "^generatepw:" $TMP > /etc/passwd
  rm $TMP
  [ -n "$IPKG_INSTROOT" ] || lock -u /var/lock/passwd
  uci set rpcd.@login[0].password="$cryptpw"

  wget -q -O/dev/null \
      --header='Content-Type: applicantion/json' \
      --post-data="\
        {\"params\": \
          { \"uuid\":\"${uuid}\", \
            \"name\": \"${hostname}\", \
            \"address\": \"${localaddress}\", \
            \"distribution\": \"${DISTRIB_ID}\", \
            \"version\": \"${DISTRIB_RELEASE}\", \
            \"proto\": \"${protocol}\", \
            \"login\": \"${user}\", \
            \"password\": \"${password}\", \
            }, \
        \"method\": \"device_register\", \
        \"jsonrpc\": \"2.0\" }" \
        "http://${address}/api"
}

reload_service() {
  config_load openwifi
  config_foreach openwifi_config openwifi
}

service_triggers()
{
  procd_add_reload_trigger "openwifi"
  procd_add_validation validate_openwifi_section
}

start_service() {
  reload_service
}
